// Code generated by protoc-gen-go. DO NOT EDIT.
// source: PageTypes.proto

package or

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PageItem_DataFormat int32

const (
	PageItem_JAVA PageItem_DataFormat = 0
	PageItem_GPB  PageItem_DataFormat = 1
)

var PageItem_DataFormat_name = map[int32]string{
	0: "JAVA",
	1: "GPB",
}
var PageItem_DataFormat_value = map[string]int32{
	"JAVA": 0,
	"GPB":  1,
}

func (x PageItem_DataFormat) Enum() *PageItem_DataFormat {
	p := new(PageItem_DataFormat)
	*p = x
	return p
}
func (x PageItem_DataFormat) String() string {
	return proto.EnumName(PageItem_DataFormat_name, int32(x))
}
func (x *PageItem_DataFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PageItem_DataFormat_value, data, "PageItem_DataFormat")
	if err != nil {
		return err
	}
	*x = PageItem_DataFormat(value)
	return nil
}
func (PageItem_DataFormat) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0, 0} }

type PageItem_DataClass int32

const (
	PageItem_String    PageItem_DataClass = 0
	PageItem_Long      PageItem_DataClass = 1
	PageItem_Schema    PageItem_DataClass = 2
	PageItem_DataIndex PageItem_DataClass = 10
)

var PageItem_DataClass_name = map[int32]string{
	0:  "String",
	1:  "Long",
	2:  "Schema",
	10: "DataIndex",
}
var PageItem_DataClass_value = map[string]int32{
	"String":    0,
	"Long":      1,
	"Schema":    2,
	"DataIndex": 10,
}

func (x PageItem_DataClass) Enum() *PageItem_DataClass {
	p := new(PageItem_DataClass)
	*p = x
	return p
}
func (x PageItem_DataClass) String() string {
	return proto.EnumName(PageItem_DataClass_name, int32(x))
}
func (x *PageItem_DataClass) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PageItem_DataClass_value, data, "PageItem_DataClass")
	if err != nil {
		return err
	}
	*x = PageItem_DataClass(value)
	return nil
}
func (PageItem_DataClass) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0, 1} }

type PageItem struct {
	Data             []byte               `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Key              *SchemaKey           `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	DataFormat       *PageItem_DataFormat `protobuf:"varint,3,opt,name=dataFormat,enum=or.PageItem_DataFormat,def=0" json:"dataFormat,omitempty"`
	DataClass        *PageItem_DataClass  `protobuf:"varint,4,opt,name=dataClass,enum=or.PageItem_DataClass,def=0" json:"dataClass,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *PageItem) Reset()                    { *m = PageItem{} }
func (m *PageItem) String() string            { return proto.CompactTextString(m) }
func (*PageItem) ProtoMessage()               {}
func (*PageItem) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

const Default_PageItem_DataFormat PageItem_DataFormat = PageItem_JAVA
const Default_PageItem_DataClass PageItem_DataClass = PageItem_String

func (m *PageItem) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PageItem) GetKey() *SchemaKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PageItem) GetDataFormat() PageItem_DataFormat {
	if m != nil && m.DataFormat != nil {
		return *m.DataFormat
	}
	return Default_PageItem_DataFormat
}

func (m *PageItem) GetDataClass() PageItem_DataClass {
	if m != nil && m.DataClass != nil {
		return *m.DataClass
	}
	return Default_PageItem_DataClass
}

func init() {
	proto.RegisterType((*PageItem)(nil), "or.PageItem")
	proto.RegisterEnum("or.PageItem_DataFormat", PageItem_DataFormat_name, PageItem_DataFormat_value)
	proto.RegisterEnum("or.PageItem_DataClass", PageItem_DataClass_name, PageItem_DataClass_value)
}

func init() { proto.RegisterFile("PageTypes.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x46, 0x6b, 0x27, 0x82, 0xf6, 0xa0, 0x60, 0xdd, 0x50, 0x2c, 0x96, 0x46, 0x99, 0x32, 0x79,
	0xe8, 0x58, 0x95, 0xa1, 0x80, 0x40, 0x05, 0x86, 0xca, 0x45, 0xec, 0x56, 0x73, 0x0a, 0x08, 0x12,
	0x57, 0x8e, 0x07, 0xf2, 0x5b, 0xf8, 0xb3, 0xc8, 0xa6, 0x34, 0x48, 0x6c, 0xb6, 0xbf, 0xf7, 0x9e,
	0x64, 0x38, 0x5f, 0x9b, 0x8a, 0x9e, 0xbb, 0x1d, 0xb5, 0x6a, 0xe7, 0xac, 0xb7, 0xc8, 0xad, 0xbb,
	0x9c, 0x6c, 0xb6, 0xaf, 0x54, 0x9b, 0x47, 0xea, 0x34, 0x6d, 0xad, 0x2b, 0xf7, 0x5b, 0xfe, 0xc5,
	0x61, 0x18, 0xf8, 0x95, 0xa7, 0x1a, 0x11, 0xd2, 0xd2, 0x78, 0x23, 0x59, 0xc6, 0x8a, 0x53, 0x1d,
	0xcf, 0x38, 0x85, 0xe4, 0x9d, 0x3a, 0xc9, 0x33, 0x56, 0x9c, 0xcc, 0xc6, 0xca, 0x3a, 0xd5, 0x97,
	0xc2, 0x82, 0x57, 0x00, 0x01, 0xbc, 0xb3, 0xae, 0x36, 0x5e, 0x26, 0x19, 0x2b, 0xce, 0x66, 0x17,
	0x81, 0xfb, 0xcd, 0xaa, 0xdb, 0xc3, 0x3c, 0x4f, 0x1f, 0x96, 0x2f, 0x4b, 0xfd, 0x47, 0xc0, 0x05,
	0x8c, 0xc2, 0xed, 0xe6, 0xc3, 0xb4, 0xad, 0x4c, 0xa3, 0x3d, 0xf9, 0x67, 0xc7, 0x75, 0x7e, 0xb4,
	0xf1, 0xee, 0xad, 0xa9, 0x74, 0x2f, 0xe4, 0x53, 0x80, 0xbe, 0x8e, 0x43, 0x88, 0x7d, 0x31, 0xc0,
	0x63, 0x48, 0xee, 0xd7, 0xd7, 0x82, 0xe5, 0x0b, 0x18, 0x1d, 0x02, 0x08, 0xb0, 0x4f, 0x88, 0x41,
	0x60, 0x9f, 0x6c, 0x53, 0x09, 0x16, 0x5f, 0xe3, 0x97, 0x04, 0xc7, 0xf1, 0x0f, 0xbe, 0x6a, 0x4a,
	0xfa, 0x14, 0xf0, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x46, 0x93, 0xf1, 0xf0, 0x4b, 0x01, 0x00, 0x00,
}
